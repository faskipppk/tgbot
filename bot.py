from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    CallbackQueryHandler,
)
import json

# –í–∞—à Telegram ID (–∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∞–Ω–∫–µ—Ç—ã)
OWNER_ID = 6198995960  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8139612394:AAFfO7Q60L_gMhIHKQ8yVZZ3eRKiULoHz9Y"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

# –ü—Ä–∏–º–µ—Ä –∞–Ω–∫–µ—Ç—ã
ANKETA_EXAMPLE = """–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–∞ –Ω–∞—à Minecraft-—Å–µ—Ä–≤–µ—Ä! 

–ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π –∂–∏—Ç–µ–ª—å –Ω–∞—à–µ–≥–æ —É—é—Ç–Ω–æ–≥–æ –º–∏—Ä–∞! üåç
–ó–∞–ø–æ–ª–Ω–∏ —ç—Ç—É –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –ø–æ–ª—É—á—à–µ –∏ –ø—Ä–∏–Ω—è—Ç—å –≤ –Ω–∞—à—É –¥—Ä—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É! 

1. –¢–≤–æ–π –Ω–∏–∫ –≤ Minecraft 
(–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫, —á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏, –∫—Ç–æ —Ç—ã –≤ –∏–≥—Ä–µ!)

2. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? üòÑ
(–ù–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è –∏–ª–∏ –∫–∞–∫ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å –≤ —á–∞—Ç–µ, —Ä–µ—à–∞–π —Å–∞–º!)

3. –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? 
(–í–æ–∑—Ä–∞—Å—Ç –Ω–µ —Å–∏–ª—å–Ω–æ, –Ω–æ –Ω–∞–º –ª—é–±–æ–ø—ã—Ç–Ω–æ!)

4. –ö–∞–∫ –¥–∞–≤–Ω–æ –∏–≥—Ä–∞–µ—à—å –≤ Minecraft? ‚õèÔ∏è
(–ù–æ–≤–∏—á–æ–∫ –∏–ª–∏ —É–∂–µ –º–∞—Å—Ç–µ—Ä-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å? –†–∞—Å—Å–∫–∞–∂–∏!)

5. –ü–æ—á–µ–º—É —Ö–æ—á–µ—à—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É? 
(–ß—Ç–æ —Ç–µ–±—è –ø—Ä–∏–≤–ª–µ–∫–ª–æ? –õ—é–±–∏—à—å —Å—Ç—Ä–æ–∏—Ç—å, –≤—ã–∂–∏–≤–∞—Ç—å –∏–ª–∏ —Ç—É—Å–∏—Ç—å —Å –∫—Ä—É—Ç—ã–º–∏ —Ä–µ–±—è—Ç–∞–º–∏?)

6. –ß—Ç–æ —Ç—ã –ª—é–±–∏—à—å –¥–µ–ª–∞—Ç—å –≤ –∏–≥—Ä–µ? üõ†
(–°—Ç—Ä–æ–∏—Ç—å –∑–∞–º–∫–∏ üè∞, –∫–æ–ø–∞—Ç—å —à–∞—Ö—Ç—ã ‚õèÔ∏è, —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å –º–æ–±–∞–º–∏ ‚öîÔ∏è –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë?)

7. –ë—ã–ª –ª–∏ –æ–ø—ã—Ç –∏–≥—Ä—ã –Ω–∞ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö? üåê
(–ï—Å–ª–∏ –¥–∞, —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç–µ–±–µ —Ç–∞–º –Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏–ª–∏ –Ω–µ –Ω—Ä–∞–≤–∏–ª–æ—Å—å!)

8. –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µ! 
(–•–æ–±–±–∏, –ª—é–±–∏–º–∞—è –µ–¥–∞, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–∞—Ä—É —Å–ª–æ–≤ !)

9. –°–æ–≥–ª–∞—Å–µ–Ω –ª–∏ —Ç—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞? üìú
(–û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ! –ò –Ω–∞–ø–∏—à–∏ ¬´–î–∞¬ª –∏–ª–∏ ¬´–°–æ–≥–ª–∞—Å–µ–Ω¬ª!)

–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—ë –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–∂–µ–º! 
–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –º–∏—Ä–∞! 
–ñ–¥—ë–º —Ç–µ–±—è! üö™‚ú®"""

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç (user_id: anketa_text)
anketas = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="view")],
        [InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∞–Ω–∫–µ—Ç—É", callback_data="submit")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup
    )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "view":
        await query.message.reply_text(ANKETA_EXAMPLE)
    elif query.data == "submit":
        context.user_data["awaiting_anketa"] = True
        await query.message.reply_text(
            f"–í–æ—Ç –ø—Ä–∏–º–µ—Ä –∞–Ω–∫–µ—Ç—ã:\n\n{ANKETA_EXAMPLE}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã:"
        )
    elif query.data.startswith("accept_") or query.data.startswith("reject_"):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
        user_id = int(query.data.split("_")[1])
        if query.data.startswith("accept_"):
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–∏–Ω—è—Ç–∏–∏
            await context.bot.send_message(
                chat_id=user_id,
                text="–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º—ã –≤–∞—Å –¥–æ–±–∞–≤–∏–º.(‚Å†„Å•‚Å†ÔΩ°‚Å†‚óï‚Å†‚Äø‚Å†‚Äø‚Å†‚óï‚Å†ÔΩ°‚Å†)‚Å†„Å•"
            )
            await query.message.reply_text(f"–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—Ä–∏–Ω—è—Ç–∞.")
        else:
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
            await context.bot.send_message(
                chat_id=user_id,
                text="–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ (‚Å† ò‚Å†·ó©‚Å† ò‚Å†‚Äô‚Å†)"
            )
            await query.message.reply_text(f"–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        # –£–¥–∞–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        if user_id in anketas:
            del anketas[user_id]

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_id = user.id
    username = user.username
    user_mention = f"@{username}" if username else f"[{user.first_name}](tg://user?id={user_id})"

    if context.user_data.get("awaiting_anketa", False):
        anketa_text = update.message.text
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∫–µ—Ç—É
        anketas[user_id] = anketa_text
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å)
        keyboard = [
            [
                InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}"),
                InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}"),
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤–ª–∞–¥–µ–ª—å—Ü—É
        await context.bot.send_message(
            chat_id=OWNER_ID,
            text=f"–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç {user_mention}:\n\n{anketa_text}",
            reply_markup=reply_markup,
            parse_mode="Markdown",
        )
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await update.message.reply_text(
            "–û–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã. –ú—ã –Ω–∞–ø–∏—à–µ–º –≤–∞–º, –∫–æ–≥–¥–∞ —Ä–µ—à–∏–º, –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∞—Å –∏–ª–∏ –Ω–µ—Ç.üïî"
        )
        context.user_data["awaiting_anketa"] = False
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start."
        )

def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()
